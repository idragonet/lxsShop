@{
    ViewBag.Title = "商品管理";
    var F = @Html.F();
}



@using Masuit.Tools.Reflection
@model List<lxsShop.ViewModel.goodsViewModel>
@*
    @section head {

        <style>
            .f-grid-cell-goodsImg img.f-grid-imagefield {
                width: 30px;
                height: 30px;
            }
        </style>

    }*@


@section body {


    @(F.Panel().ID("Panel1").BodyPadding(5).ShowBorder(false).Layout(LayoutType.VBox).ShowHeader(true).Title("商品管理").IsViewPort(true)
        .Items(
            F.Grid().ID("Grid1").BoxFlex(1).ShowBorder(true).ShowHeader(false)
                .EnableCheckBoxSelect(false).DataIDField("goodsId")
                .AllowPaging(true).PageSize(20).IsDatabasePaging(true).OnPageIndexChanged(Url.Action("Grid1_PageIndexChangedOrSort"), "Grid1")
                .AllowSorting(true).SortField(ViewBag.Grid1SortField).SortDirection(ViewBag.Grid1SortDirection).OnSort(Url.Action("Grid1_PageIndexChangedOrSort"), "Grid1")
                .Columns(
                    F.RowNumberField().EnablePagingNumber(true),
                    F.RenderFieldFor(m => m.goodsId, false).Hidden(true).Width(100),
                    F.RenderFieldFor(m => m.goodsSn, true).Width(100),
                    F.RenderFieldFor(m => m.goodsName, true).Width(220),
                    F.RenderField().HeaderText("商品图片").EnableHeaderMenu(false).EnableColumnHide(false).DataField("goodsImg").RendererFunction("renderGoodsImg").Width(100),
                    F.RenderFieldFor(m => m.goodsCatId, false).Hidden(true).Width(120),
                    F.RenderFieldFor(m => m.catName, true).Width(120),
                    F.RenderFieldFor(m => m.brandName, true).Width(120),
                    F.RenderFieldFor(m => m.brandId, false).Hidden(true).Width(120),
                    F.RenderFieldFor(m => m.CreateDate, true).Width(170).FieldFormat("yyyy-MM-dd HH:mm"),
                    F.RenderField().HeaderText("").EnableHeaderMenu(false).EnableColumnHide(false).TextAlign(TextAlign.Center).RendererFunction("renderActionEdit").Width(50),
                    F.RenderField().HeaderText("").EnableHeaderMenu(false).EnableColumnHide(false).TextAlign(TextAlign.Center).RendererFunction("renderActionDelete").Width(50),
                    F.RenderField().HeaderText("浏览").EnableHeaderMenu(false).EnableColumnHide(false).TextAlign(TextAlign.Center).RendererFunction("renderBrowse").Width(50)
                ).RecordCount(ViewBag.Grid1RecordCount).DataSource(Model)
        )
        .Toolbars(
            F.Toolbar().ID("Toolbar1").Position(ToolbarPosition.Top)
                .Items(
                    F.ToolbarFill(),
                    F.Button().ID("btnNew").Icon(Icon.Add).Text("新增").Listener("click", "onNewClick")
                )
        )
        )

    @(F.Window().ID("Window1").IsModal(true).Hidden(true).Target(Target.Top).EnableResize(true).EnableMaximize(true).EnableIFrame(true).Width(1000).Height(780).OnClose(Url.Action("DoPostBack"), "Panel1"))

}




@section script {

    <script>

        var coreDeptEdit = '';
        var coreDeptDelete = '';

        function onNewClick(event) {
            F.ui.Window1.show('@Url.Content("~/Admin/Goods/New")', '新增');
        }

        function renderActionEdit(value, params) {
            var imageUrl = '@Url.Content("~/res/icon/pencil.png")';
            var disabledCls = '';
            return '<a class="action-btn edit ' + disabledCls + '"  href="javascript:;"><img class="f-grid-cell-icon" src="' + imageUrl + '"></a>';
        }

        function renderActionDelete(value, params) {
            var imageUrl = '@Url.Content("~/res/icon/delete.png")';
            var disabledCls = '';
            return '<a class="action-btn delete' + disabledCls + '" href="javascript:;"><img class="f-grid-cell-icon" src="' + imageUrl + '"></a>';
        }


        function renderBrowse(value, params) {
            var imageUrl = '@Url.Content("~/res/icon/world_go.png")';
            var disabledCls = '';
            return '<a class="action-btn delete' + disabledCls + '" href="javascript:;"><img class="f-grid-cell-icon" src="' + imageUrl + '"></a>';
        }

        function renderGoodsImg(value, params) {
            var imageUrl = F.baseUrl + 'uploads/' + value;
            return F.formatString('<a href="{0}"  target="_blank"> <img class="f-grid-imagefield" src="{0}"/></a>', imageUrl);


            //   return '<a href="javascript:;" class="mywindowfield"><img class="f-grid-cell-icon" src="@Url.Content("~/res/icon/pencil.png")"></a>';
        }


        F.ready(function() {

            var grid1 = F.ui.Grid1;
            grid1.el.on('click',
                'a.action-btn',
                function(event) {
                    var cnode = $(this);
                    var rowData = grid1.getRowData(cnode.closest('.f-grid-row'));

                    // 是否禁用
                    if (cnode.hasClass('f-state-disabled')) {
                        return;
                    }

                    if (cnode.hasClass('delete')) {
                        F.confirm({
                            message: '确定删除此记录？',
                            target: '_top',
                            ok: function() {
                                // 触发后台事件
                                F.doPostBack('@Url.Action("DoPostBack")',
                                    'Panel1',
                                    {
                                        actionType: 'delete',
                                        deletedRowID: rowData.id
                                    });
                            }
                        });
                    } else if (cnode.hasClass('edit')) {
                        F.ui.Window1.show('@Url.Content("~/Admin/Brands/BrandsEdit?id=")' + rowData.id, '编辑');
                    }
                });

        });

    </script>
}